// <auto-generated />
using System;
using ApiCelulares.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiCelulares.Migrations
{
    [DbContext(typeof(DbCelulares))]
    [Migration("20201031225259_cambios bd")]
    partial class cambiosbd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("ApiCelulares.Modelo.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("nombreCategoria")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Celular", b =>
                {
                    b.Property<int>("CelularId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ModeloCelularId")
                        .HasColumnType("int");

                    b.Property<bool>("chip")
                        .HasColumnType("bit");

                    b.Property<string>("diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("empresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("enciende")
                        .HasColumnType("bit");

                    b.Property<string>("patron")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pin")
                        .HasColumnType("int");

                    b.Property<bool>("tarjetaSd")
                        .HasColumnType("bit");

                    b.HasKey("CelularId");

                    b.HasIndex("ModeloCelularId");

                    b.ToTable("Celulars");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.LineaVenta", b =>
                {
                    b.Property<int>("LineaVentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("OrdenDeReparacionId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int?>("VentaId")
                        .HasColumnType("int");

                    b.Property<double>("cantidad")
                        .HasColumnType("float");

                    b.Property<double>("descuento")
                        .HasColumnType("float");

                    b.HasKey("LineaVentaId");

                    b.HasIndex("OrdenDeReparacionId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("VentaId");

                    b.ToTable("LineaVentas");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.MarcaCelular", b =>
                {
                    b.Property<int>("MarcaCelularId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarcaCelularId");

                    b.ToTable("MarcaCelulars");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.MarcaPc", b =>
                {
                    b.Property<int>("MarcaPcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarcaPcId");

                    b.ToTable("MarcaPcs");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.ModeloCelular", b =>
                {
                    b.Property<int>("ModeloCelularId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("MarcaCelularId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModeloCelularId");

                    b.HasIndex("MarcaCelularId");

                    b.ToTable("ModeloCelulars");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.ModeloPc", b =>
                {
                    b.Property<int>("ModeloPcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("MarcaPcId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModeloPcId");

                    b.HasIndex("MarcaPcId");

                    b.ToTable("ModeloPcs");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.OrdenDeReparacion", b =>
                {
                    b.Property<int>("OrdenDeReparacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoEquipoId")
                        .HasColumnType("int");

                    b.Property<string>("detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detalleReparacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estadoReparacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaEgreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.HasKey("OrdenDeReparacionId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoEquipoId");

                    b.ToTable("OrdenDeReparacions");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Pago", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("VentaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaPago")
                        .HasColumnType("datetime2");

                    b.Property<double>("montoPago")
                        .HasColumnType("float");

                    b.Property<string>("tipoPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoTarjeta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PagoId");

                    b.HasIndex("VentaId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Pc", b =>
                {
                    b.Property<int>("PcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ModeloPcId")
                        .HasColumnType("int");

                    b.Property<string>("diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PcId");

                    b.HasIndex("ModeloPcId");

                    b.ToTable("Pcs");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenDeReparacionId")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<string>("detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precioCompra")
                        .HasColumnType("float");

                    b.Property<double>("precioVenta")
                        .HasColumnType("float");

                    b.Property<double>("stock")
                        .HasColumnType("float");

                    b.Property<double>("stockMinimo")
                        .HasColumnType("float");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("OrdenDeReparacionId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProveedorId");

                    b.ToTable("Proveedors");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.TipoEquipo", b =>
                {
                    b.Property<int>("TipoEquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CelularId")
                        .HasColumnType("int");

                    b.Property<int?>("PcId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoEquipoId");

                    b.HasIndex("CelularId");

                    b.HasIndex("PcId");

                    b.ToTable("TipoEquipos");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Venta", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("fechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<double>("monto")
                        .HasColumnType("float");

                    b.Property<bool>("pagado")
                        .HasColumnType("bit");

                    b.HasKey("VentaId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Celular", b =>
                {
                    b.HasOne("ApiCelulares.Modelo.ModeloCelular", "ModeloCelular")
                        .WithMany("ListaCelular")
                        .HasForeignKey("ModeloCelularId");

                    b.Navigation("ModeloCelular");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.LineaVenta", b =>
                {
                    b.HasOne("ApiCelulares.Modelo.OrdenDeReparacion", "OrdenDeReparacion")
                        .WithMany("ListaLineaVenta")
                        .HasForeignKey("OrdenDeReparacionId");

                    b.HasOne("ApiCelulares.Modelo.Producto", "Producto")
                        .WithMany("ListaLineaVenta")
                        .HasForeignKey("ProductoId");

                    b.HasOne("ApiCelulares.Modelo.Venta", "Venta")
                        .WithMany("ListaLineaVentas")
                        .HasForeignKey("VentaId");

                    b.Navigation("OrdenDeReparacion");

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.ModeloCelular", b =>
                {
                    b.HasOne("ApiCelulares.Modelo.MarcaCelular", "MarcaCelular")
                        .WithMany("Listamodelocelular")
                        .HasForeignKey("MarcaCelularId");

                    b.Navigation("MarcaCelular");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.ModeloPc", b =>
                {
                    b.HasOne("ApiCelulares.Modelo.MarcaPc", "MarcaPc")
                        .WithMany("ListaModeloPc")
                        .HasForeignKey("MarcaPcId");

                    b.Navigation("MarcaPc");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.OrdenDeReparacion", b =>
                {
                    b.HasOne("ApiCelulares.Modelo.Cliente", "Cliente")
                        .WithMany("ListaOrdenDeReparacion")
                        .HasForeignKey("ClienteId");

                    b.HasOne("ApiCelulares.Modelo.TipoEquipo", "TipoEquipo")
                        .WithMany("ListaOrdenDeReparacion")
                        .HasForeignKey("TipoEquipoId");

                    b.Navigation("Cliente");

                    b.Navigation("TipoEquipo");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Pago", b =>
                {
                    b.HasOne("ApiCelulares.Modelo.Venta", "Venta")
                        .WithMany("ListaPagos")
                        .HasForeignKey("VentaId");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Pc", b =>
                {
                    b.HasOne("ApiCelulares.Modelo.ModeloPc", "ModeloPc")
                        .WithMany("ListaPc")
                        .HasForeignKey("ModeloPcId");

                    b.Navigation("ModeloPc");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Producto", b =>
                {
                    b.HasOne("ApiCelulares.Modelo.Categoria", "Categoria")
                        .WithMany("ListaProducto")
                        .HasForeignKey("CategoriaId");

                    b.HasOne("ApiCelulares.Modelo.OrdenDeReparacion", "OrdenDeReparacion")
                        .WithMany("ListaProducto")
                        .HasForeignKey("OrdenDeReparacionId");

                    b.HasOne("ApiCelulares.Modelo.Proveedor", "Proveedor")
                        .WithMany("ListaProducto")
                        .HasForeignKey("ProveedorId");

                    b.Navigation("Categoria");

                    b.Navigation("OrdenDeReparacion");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.TipoEquipo", b =>
                {
                    b.HasOne("ApiCelulares.Modelo.Celular", "Celular")
                        .WithMany()
                        .HasForeignKey("CelularId");

                    b.HasOne("ApiCelulares.Modelo.Pc", "Pc")
                        .WithMany()
                        .HasForeignKey("PcId");

                    b.Navigation("Celular");

                    b.Navigation("Pc");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Categoria", b =>
                {
                    b.Navigation("ListaProducto");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Cliente", b =>
                {
                    b.Navigation("ListaOrdenDeReparacion");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.MarcaCelular", b =>
                {
                    b.Navigation("Listamodelocelular");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.MarcaPc", b =>
                {
                    b.Navigation("ListaModeloPc");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.ModeloCelular", b =>
                {
                    b.Navigation("ListaCelular");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.ModeloPc", b =>
                {
                    b.Navigation("ListaPc");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.OrdenDeReparacion", b =>
                {
                    b.Navigation("ListaLineaVenta");

                    b.Navigation("ListaProducto");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Producto", b =>
                {
                    b.Navigation("ListaLineaVenta");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Proveedor", b =>
                {
                    b.Navigation("ListaProducto");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.TipoEquipo", b =>
                {
                    b.Navigation("ListaOrdenDeReparacion");
                });

            modelBuilder.Entity("ApiCelulares.Modelo.Venta", b =>
                {
                    b.Navigation("ListaLineaVentas");

                    b.Navigation("ListaPagos");
                });
#pragma warning restore 612, 618
        }
    }
}
